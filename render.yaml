# render.yaml
# This file tells Render how to build and run your service.

services:
  # A name for your service
  - name: geminicli2api
    # The type of service. 'web' means it's an HTTP server.
    type: web
    # The runtime environment. 'docker' tells Render to use your Dockerfile.
    runtime: docker
    # The health check path. Render will ping this to make sure your service is live.
    healthCheckPath: /health
    # Optional: Specify your repository URL if you want to be explicit
    # repo: https://github.com/your-username/your-repo-name
    
    # Environment variables for your service.
    # You will set the actual values in the Render dashboard.
    # Using 'fromService' for PORT is a Render best practice.
    envVars:
      - key: PORT
        value: 8888 # The internal port your app listens on
      - key: GEMINI_AUTH_PASSWORD
        sync: false # Set this sensitive value in the dashboard
      - key: GEMINI_CREDENTIALS
        sync: false # Set this sensitive value in the dashboard
      # The following are optional based on your auth method
      - key: GOOGLE_CLOUD_PROJECT
        sync: false
      - key: GOOGLE_APPLICATION_CREDENTIALS
        sync: false
      - key: HOST
        value: 0.0.0.0 # Important: Services must listen on 0.0.0.0 in Render

# Note on Volumes:
# Render's free tier has an ephemeral filesystem. If you need to use a credentials file,
# the recommended way is to create a "Secret File" in the Render dashboard
# and set its path in the GOOGLE_APPLICATION_CREDENTIALS environment variable.
